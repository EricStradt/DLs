Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> rc IN NOT rc
Rule 2     expression -> rc IN rc
Rule 3     expression -> rc EQUIV rc
Rule 4     expression -> rc RIN rc
Rule 5     rc -> rc RCOMP rc
Rule 6     rc -> rc INTER rc
Rule 7     rc -> ID
Rule 8     rc -> BOTTOM
Rule 9     rc -> TOP
Rule 10    rc -> LPAREN rc RPAREN
Rule 11    rc -> EXISTS ID rc
Rule 12    rc -> EXISTS LPAREN ID VIRG rc RPAREN

Terminals, with rules where they appear

BOTTOM               : 8
EQUIV                : 3
EXISTS               : 11 12
ID                   : 7 11 12
IN                   : 1 2
INTER                : 6
LPAREN               : 10 12
NOT                  : 1
RCOMP                : 5
RIN                  : 4
RPAREN               : 10 12
TOP                  : 9
VIRG                 : 12
error                : 

Nonterminals, with rules where they appear

expression           : 0
rc                   : 1 1 2 2 3 3 4 4 5 5 6 6 10 11 12

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . rc IN NOT rc
    (2) expression -> . rc IN rc
    (3) expression -> . rc EQUIV rc
    (4) expression -> . rc RIN rc
    (5) rc -> . rc RCOMP rc
    (6) rc -> . rc INTER rc
    (7) rc -> . ID
    (8) rc -> . BOTTOM
    (9) rc -> . TOP
    (10) rc -> . LPAREN rc RPAREN
    (11) rc -> . EXISTS ID rc
    (12) rc -> . EXISTS LPAREN ID VIRG rc RPAREN

    ID              shift and go to state 7
    BOTTOM          shift and go to state 5
    TOP             shift and go to state 3
    LPAREN          shift and go to state 1
    EXISTS          shift and go to state 2

    expression                     shift and go to state 6
    rc                             shift and go to state 4

state 1

    (10) rc -> LPAREN . rc RPAREN
    (5) rc -> . rc RCOMP rc
    (6) rc -> . rc INTER rc
    (7) rc -> . ID
    (8) rc -> . BOTTOM
    (9) rc -> . TOP
    (10) rc -> . LPAREN rc RPAREN
    (11) rc -> . EXISTS ID rc
    (12) rc -> . EXISTS LPAREN ID VIRG rc RPAREN

    ID              shift and go to state 7
    BOTTOM          shift and go to state 5
    TOP             shift and go to state 3
    LPAREN          shift and go to state 1
    EXISTS          shift and go to state 2

    rc                             shift and go to state 8

state 2

    (11) rc -> EXISTS . ID rc
    (12) rc -> EXISTS . LPAREN ID VIRG rc RPAREN

    ID              shift and go to state 10
    LPAREN          shift and go to state 9


state 3

    (9) rc -> TOP .

    RCOMP           reduce using rule 9 (rc -> TOP .)
    INTER           reduce using rule 9 (rc -> TOP .)
    IN              reduce using rule 9 (rc -> TOP .)
    EQUIV           reduce using rule 9 (rc -> TOP .)
    RIN             reduce using rule 9 (rc -> TOP .)
    RPAREN          reduce using rule 9 (rc -> TOP .)
    $end            reduce using rule 9 (rc -> TOP .)


state 4

    (1) expression -> rc . IN NOT rc
    (2) expression -> rc . IN rc
    (3) expression -> rc . EQUIV rc
    (4) expression -> rc . RIN rc
    (5) rc -> rc . RCOMP rc
    (6) rc -> rc . INTER rc

    IN              shift and go to state 12
    EQUIV           shift and go to state 14
    RIN             shift and go to state 11
    RCOMP           shift and go to state 13
    INTER           shift and go to state 15


state 5

    (8) rc -> BOTTOM .

    RCOMP           reduce using rule 8 (rc -> BOTTOM .)
    INTER           reduce using rule 8 (rc -> BOTTOM .)
    IN              reduce using rule 8 (rc -> BOTTOM .)
    EQUIV           reduce using rule 8 (rc -> BOTTOM .)
    RIN             reduce using rule 8 (rc -> BOTTOM .)
    RPAREN          reduce using rule 8 (rc -> BOTTOM .)
    $end            reduce using rule 8 (rc -> BOTTOM .)


state 6

    (0) S' -> expression .



state 7

    (7) rc -> ID .

    RCOMP           reduce using rule 7 (rc -> ID .)
    INTER           reduce using rule 7 (rc -> ID .)
    IN              reduce using rule 7 (rc -> ID .)
    EQUIV           reduce using rule 7 (rc -> ID .)
    RIN             reduce using rule 7 (rc -> ID .)
    RPAREN          reduce using rule 7 (rc -> ID .)
    $end            reduce using rule 7 (rc -> ID .)


state 8

    (10) rc -> LPAREN rc . RPAREN
    (5) rc -> rc . RCOMP rc
    (6) rc -> rc . INTER rc

    RPAREN          shift and go to state 16
    RCOMP           shift and go to state 13
    INTER           shift and go to state 15


state 9

    (12) rc -> EXISTS LPAREN . ID VIRG rc RPAREN

    ID              shift and go to state 17


state 10

    (11) rc -> EXISTS ID . rc
    (5) rc -> . rc RCOMP rc
    (6) rc -> . rc INTER rc
    (7) rc -> . ID
    (8) rc -> . BOTTOM
    (9) rc -> . TOP
    (10) rc -> . LPAREN rc RPAREN
    (11) rc -> . EXISTS ID rc
    (12) rc -> . EXISTS LPAREN ID VIRG rc RPAREN

    ID              shift and go to state 7
    BOTTOM          shift and go to state 5
    TOP             shift and go to state 3
    LPAREN          shift and go to state 1
    EXISTS          shift and go to state 2

    rc                             shift and go to state 18

state 11

    (4) expression -> rc RIN . rc
    (5) rc -> . rc RCOMP rc
    (6) rc -> . rc INTER rc
    (7) rc -> . ID
    (8) rc -> . BOTTOM
    (9) rc -> . TOP
    (10) rc -> . LPAREN rc RPAREN
    (11) rc -> . EXISTS ID rc
    (12) rc -> . EXISTS LPAREN ID VIRG rc RPAREN

    ID              shift and go to state 7
    BOTTOM          shift and go to state 5
    TOP             shift and go to state 3
    LPAREN          shift and go to state 1
    EXISTS          shift and go to state 2

    rc                             shift and go to state 19

state 12

    (1) expression -> rc IN . NOT rc
    (2) expression -> rc IN . rc
    (5) rc -> . rc RCOMP rc
    (6) rc -> . rc INTER rc
    (7) rc -> . ID
    (8) rc -> . BOTTOM
    (9) rc -> . TOP
    (10) rc -> . LPAREN rc RPAREN
    (11) rc -> . EXISTS ID rc
    (12) rc -> . EXISTS LPAREN ID VIRG rc RPAREN

    NOT             shift and go to state 20
    ID              shift and go to state 7
    BOTTOM          shift and go to state 5
    TOP             shift and go to state 3
    LPAREN          shift and go to state 1
    EXISTS          shift and go to state 2

    rc                             shift and go to state 21

state 13

    (5) rc -> rc RCOMP . rc
    (5) rc -> . rc RCOMP rc
    (6) rc -> . rc INTER rc
    (7) rc -> . ID
    (8) rc -> . BOTTOM
    (9) rc -> . TOP
    (10) rc -> . LPAREN rc RPAREN
    (11) rc -> . EXISTS ID rc
    (12) rc -> . EXISTS LPAREN ID VIRG rc RPAREN

    ID              shift and go to state 7
    BOTTOM          shift and go to state 5
    TOP             shift and go to state 3
    LPAREN          shift and go to state 1
    EXISTS          shift and go to state 2

    rc                             shift and go to state 22

state 14

    (3) expression -> rc EQUIV . rc
    (5) rc -> . rc RCOMP rc
    (6) rc -> . rc INTER rc
    (7) rc -> . ID
    (8) rc -> . BOTTOM
    (9) rc -> . TOP
    (10) rc -> . LPAREN rc RPAREN
    (11) rc -> . EXISTS ID rc
    (12) rc -> . EXISTS LPAREN ID VIRG rc RPAREN

    ID              shift and go to state 7
    BOTTOM          shift and go to state 5
    TOP             shift and go to state 3
    LPAREN          shift and go to state 1
    EXISTS          shift and go to state 2

    rc                             shift and go to state 23

state 15

    (6) rc -> rc INTER . rc
    (5) rc -> . rc RCOMP rc
    (6) rc -> . rc INTER rc
    (7) rc -> . ID
    (8) rc -> . BOTTOM
    (9) rc -> . TOP
    (10) rc -> . LPAREN rc RPAREN
    (11) rc -> . EXISTS ID rc
    (12) rc -> . EXISTS LPAREN ID VIRG rc RPAREN

    ID              shift and go to state 7
    BOTTOM          shift and go to state 5
    TOP             shift and go to state 3
    LPAREN          shift and go to state 1
    EXISTS          shift and go to state 2

    rc                             shift and go to state 24

state 16

    (10) rc -> LPAREN rc RPAREN .

    RCOMP           reduce using rule 10 (rc -> LPAREN rc RPAREN .)
    INTER           reduce using rule 10 (rc -> LPAREN rc RPAREN .)
    IN              reduce using rule 10 (rc -> LPAREN rc RPAREN .)
    EQUIV           reduce using rule 10 (rc -> LPAREN rc RPAREN .)
    RIN             reduce using rule 10 (rc -> LPAREN rc RPAREN .)
    RPAREN          reduce using rule 10 (rc -> LPAREN rc RPAREN .)
    $end            reduce using rule 10 (rc -> LPAREN rc RPAREN .)


state 17

    (12) rc -> EXISTS LPAREN ID . VIRG rc RPAREN

    VIRG            shift and go to state 25


state 18

    (11) rc -> EXISTS ID rc .
    (5) rc -> rc . RCOMP rc
    (6) rc -> rc . INTER rc

  ! shift/reduce conflict for RCOMP resolved as shift
  ! shift/reduce conflict for INTER resolved as shift
    IN              reduce using rule 11 (rc -> EXISTS ID rc .)
    EQUIV           reduce using rule 11 (rc -> EXISTS ID rc .)
    RIN             reduce using rule 11 (rc -> EXISTS ID rc .)
    RPAREN          reduce using rule 11 (rc -> EXISTS ID rc .)
    $end            reduce using rule 11 (rc -> EXISTS ID rc .)
    RCOMP           shift and go to state 13
    INTER           shift and go to state 15

  ! RCOMP           [ reduce using rule 11 (rc -> EXISTS ID rc .) ]
  ! INTER           [ reduce using rule 11 (rc -> EXISTS ID rc .) ]


state 19

    (4) expression -> rc RIN rc .
    (5) rc -> rc . RCOMP rc
    (6) rc -> rc . INTER rc

    $end            reduce using rule 4 (expression -> rc RIN rc .)
    RCOMP           shift and go to state 13
    INTER           shift and go to state 15


state 20

    (1) expression -> rc IN NOT . rc
    (5) rc -> . rc RCOMP rc
    (6) rc -> . rc INTER rc
    (7) rc -> . ID
    (8) rc -> . BOTTOM
    (9) rc -> . TOP
    (10) rc -> . LPAREN rc RPAREN
    (11) rc -> . EXISTS ID rc
    (12) rc -> . EXISTS LPAREN ID VIRG rc RPAREN

    ID              shift and go to state 7
    BOTTOM          shift and go to state 5
    TOP             shift and go to state 3
    LPAREN          shift and go to state 1
    EXISTS          shift and go to state 2

    rc                             shift and go to state 26

state 21

    (2) expression -> rc IN rc .
    (5) rc -> rc . RCOMP rc
    (6) rc -> rc . INTER rc

    $end            reduce using rule 2 (expression -> rc IN rc .)
    RCOMP           shift and go to state 13
    INTER           shift and go to state 15


state 22

    (5) rc -> rc RCOMP rc .
    (5) rc -> rc . RCOMP rc
    (6) rc -> rc . INTER rc

  ! shift/reduce conflict for RCOMP resolved as shift
  ! shift/reduce conflict for INTER resolved as shift
    IN              reduce using rule 5 (rc -> rc RCOMP rc .)
    EQUIV           reduce using rule 5 (rc -> rc RCOMP rc .)
    RIN             reduce using rule 5 (rc -> rc RCOMP rc .)
    RPAREN          reduce using rule 5 (rc -> rc RCOMP rc .)
    $end            reduce using rule 5 (rc -> rc RCOMP rc .)
    RCOMP           shift and go to state 13
    INTER           shift and go to state 15

  ! RCOMP           [ reduce using rule 5 (rc -> rc RCOMP rc .) ]
  ! INTER           [ reduce using rule 5 (rc -> rc RCOMP rc .) ]


state 23

    (3) expression -> rc EQUIV rc .
    (5) rc -> rc . RCOMP rc
    (6) rc -> rc . INTER rc

    $end            reduce using rule 3 (expression -> rc EQUIV rc .)
    RCOMP           shift and go to state 13
    INTER           shift and go to state 15


state 24

    (6) rc -> rc INTER rc .
    (5) rc -> rc . RCOMP rc
    (6) rc -> rc . INTER rc

  ! shift/reduce conflict for RCOMP resolved as shift
  ! shift/reduce conflict for INTER resolved as shift
    IN              reduce using rule 6 (rc -> rc INTER rc .)
    EQUIV           reduce using rule 6 (rc -> rc INTER rc .)
    RIN             reduce using rule 6 (rc -> rc INTER rc .)
    RPAREN          reduce using rule 6 (rc -> rc INTER rc .)
    $end            reduce using rule 6 (rc -> rc INTER rc .)
    RCOMP           shift and go to state 13
    INTER           shift and go to state 15

  ! RCOMP           [ reduce using rule 6 (rc -> rc INTER rc .) ]
  ! INTER           [ reduce using rule 6 (rc -> rc INTER rc .) ]


state 25

    (12) rc -> EXISTS LPAREN ID VIRG . rc RPAREN
    (5) rc -> . rc RCOMP rc
    (6) rc -> . rc INTER rc
    (7) rc -> . ID
    (8) rc -> . BOTTOM
    (9) rc -> . TOP
    (10) rc -> . LPAREN rc RPAREN
    (11) rc -> . EXISTS ID rc
    (12) rc -> . EXISTS LPAREN ID VIRG rc RPAREN

    ID              shift and go to state 7
    BOTTOM          shift and go to state 5
    TOP             shift and go to state 3
    LPAREN          shift and go to state 1
    EXISTS          shift and go to state 2

    rc                             shift and go to state 27

state 26

    (1) expression -> rc IN NOT rc .
    (5) rc -> rc . RCOMP rc
    (6) rc -> rc . INTER rc

    $end            reduce using rule 1 (expression -> rc IN NOT rc .)
    RCOMP           shift and go to state 13
    INTER           shift and go to state 15


state 27

    (12) rc -> EXISTS LPAREN ID VIRG rc . RPAREN
    (5) rc -> rc . RCOMP rc
    (6) rc -> rc . INTER rc

    RPAREN          shift and go to state 28
    RCOMP           shift and go to state 13
    INTER           shift and go to state 15


state 28

    (12) rc -> EXISTS LPAREN ID VIRG rc RPAREN .

    RCOMP           reduce using rule 12 (rc -> EXISTS LPAREN ID VIRG rc RPAREN .)
    INTER           reduce using rule 12 (rc -> EXISTS LPAREN ID VIRG rc RPAREN .)
    IN              reduce using rule 12 (rc -> EXISTS LPAREN ID VIRG rc RPAREN .)
    EQUIV           reduce using rule 12 (rc -> EXISTS LPAREN ID VIRG rc RPAREN .)
    RIN             reduce using rule 12 (rc -> EXISTS LPAREN ID VIRG rc RPAREN .)
    RPAREN          reduce using rule 12 (rc -> EXISTS LPAREN ID VIRG rc RPAREN .)
    $end            reduce using rule 12 (rc -> EXISTS LPAREN ID VIRG rc RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RCOMP in state 18 resolved as shift
WARNING: shift/reduce conflict for INTER in state 18 resolved as shift
WARNING: shift/reduce conflict for RCOMP in state 22 resolved as shift
WARNING: shift/reduce conflict for INTER in state 22 resolved as shift
WARNING: shift/reduce conflict for RCOMP in state 24 resolved as shift
WARNING: shift/reduce conflict for INTER in state 24 resolved as shift
